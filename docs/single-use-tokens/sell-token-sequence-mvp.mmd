sequenceDiagram
    Client ->> Initiator node: sell_token(token_id,price,new_owner,tiemout)

    activate Initiator node
    Note right of Initiator node: INSERT instruction "sell_token(..)"
    Initiator node ->> Client: (sell_token)
    Initiator node ->> Initiator node: create temp_wallet and sell_token_lock
    Note right of Initiator node: INSERT instruction "sell_token_lock(tempWallet)"
    Initiator node ->> Committee: transition(sell_token_lock(tempWallet),Pending)
    Note right of Committee: INSERT instruction "sell_token_lock(..)"
    alt if consensus reached
    Committee ->> Initiator node:  transition(sell_token_lock(tempWallet),Commit)
    else timeout expired
    Initiator node ->> Committee: transition(sell_token_lock(tempWallet),Invalid)
    end
    deactivate Initiator node

    Note right of Client: Client pulling instruction status
    par Client to Initiator node
    Client ->> Initiator node: status_with_subinstructions(sell_token)
    Initiator node ->> Client: sell_token_lock(tempWallet)=Commit,sell_token(tokenID)=Processing
    end

    activate Initiator node
    Note right of Client: Client sending tari to temp_wallet
    Client -->> base layer: send tari to temp_wallet
    Initiator node -->> base layer: send-tari(asset_beneficiaries)
    Initiator node ->> Committee: transition(sell_token(tokenID),Pending)
    Committee ->> Initiator node: transition(sell_token(tokenID),Commit)
    deactivate Initiator node

    Note right of Client: Client pulling instruction status
    par Client to Initiator node
    Client ->> Initiator node: status_with_subinstructions(sell_token)
    Initiator node ->> Client: sell_token_lock(tempWallet)=Commit,sell_token(tokenID)=Commit
    end
